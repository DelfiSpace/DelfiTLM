version: '3.7'

services:
    app:
        volumes:
            - static_data:/vol/web
        environment:
            # TODO: change the key
            # could also add database config here and remove it from settings.py
            - DEBUG=0
            - SECRET_KEY=${SECRET_KEY:-qwerty}
            - ALLOWED_HOSTS=${MY_HOST:-localhost,127.0.0.1}
            - SMTP_HOST=${SMTP_HOST}
            - SMTP_PORT=${SMTP_PORT}
            - FROM_EMAIL=${FROM_EMAIL:-webmaster@localhost}
        restart: always
        # networks:
        #     crowdsec_test:

    proxy:
        build:
            context: ./proxy
        volumes:
            - static_data:/vol:ro
            - certificates:/certs:ro
            - logs:/var/log/nginx
        ports:
            - "80:8080"
            - "443:8443"
        environment:
            - MY_HOST=${MY_HOST:-localhost}
        depends_on:
            - app
            - pgadmin
            - grafana
        restart: always
        # networks:
        #     crowdsec_test:

    pgadmin:
        container_name: pgadmin4_container
        image: dpage/pgadmin4:6.5
        restart: always
        environment:
            - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL:-admin@admin.com}
            - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD:-admin}
        depends_on:
            - "db"
        volumes:
            - pgadmin_persistent:/var/lib/pgadmin
        # networks:
        #     crowdsec_test:

    crowdsec:
        image: crowdsecurity/crowdsec:v1.3.4
        restart: always
        environment:
            #this is the list of collections we want to install
            #https://hub.crowdsec.net/author/crowdsecurity/collections/nginx
            COLLECTIONS: "crowdsecurity/nginx"
            GID: "${GID-1000}"
        depends_on:
            - 'proxy'
        volumes:
            - ./crowdsec/acquis.yaml:/etc/crowdsec/acquis.yaml
            - logs:/var/log/nginx/:ro
            - crowdsec_db:/var/lib/crowdsec/data/
            - crowdsec_config:/etc/crowdsec/
        # networks:
        #     crowdsec_test:
    #metabase, because security is cool, but dashboards are cooler
    # crowdsec_dashboard:
    #     #we're using a custom Dockerfile so that metabase pops with pre-configured dashboards
    #     build: ./crowdsec/dashboard
    #     restart: always
    #     ports:
    #         - 3100:3000
    #     environment:
    #         MB_DB_FILE: /data/metabase.db
    #         MGID: "${GID-1000}"
    #     depends_on:
    #         - 'crowdsec'
    #     volumes:
    #         - crowdsec_db:/metabase-data/
        # networks:
        #     crowdsec_test:

volumes:
    logs:
    static_data:
    certificates:
    pgadmin_persistent:
    crowdsec_db:
    crowdsec_config:

# networks:
#  crowdsec_test:
#    ipam:
#      driver: default
